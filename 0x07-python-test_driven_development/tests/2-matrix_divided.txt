===================================
Task 2-matrix_divided.py
===================================

File test Using "matrix_divided""
===================================

function that divides all elements of a matrix. First import
""2-matrxi_divided"" from the "matrix_divided" module:
-------------------------------------------------------------

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

-------------------------------------------------------------

    Correct Test:
Test case #0:
    >>> matrix_divided([[0, 20], [30, 40], [50, 60]], 2)
    [[0.0, 10.0], [15.0, 20.0], [25.0, 30.0]]

Test case #1:
    >>> matrix_divided([[423]], 269)
    [[1.57]]

Test case #2:
    >>> matrix_divided([[120.2, 234.4], [21.3, 8]], 24)
    [[5.01, 9.77], [0.89, 0.33]]

Test case #3:
    >>> matrix_divided([[0.22], [21], [2], [798]], 0.1)
    [[2.2], [210.0], [20.0], [7980.0]]

Test case #3.0: A test case with infinite elements to divide
    >>> matrix = [[1e400, 1e500, 1e600],[1e900, 1e800, 1e700]]
    >>> matrix_divided(matrix, 3)
    [[inf, inf, inf], [inf, inf, inf]]

Test case #3.1: A test case with integer and float elements and float divider
    >>> matrix = [[1.0, -2.0, -3.0],[-4.0, 5.0, -6.0]]
    >>> matrix_divided(matrix, 3.0)
    [[0.33, -0.67, -1.0], [-1.33, 1.67, -2.0]]

---------------------------------------------------------------

    Failed Type Test:
Test case #4:
    >>> matrix_divided([[1, 2, 3], (4, 5, 6)], 64)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case #5:
    >>> matrix_divided([[23.3, 129, "a"], [1, 46, 12]], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case #6:
    >>> matrix_divided([[456.1, "345"], [123, 65]], 5)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case #6.0: A test case with the rows of an inconsistent size matrix
    >>> matrix = [[1, 2, 3], 4, 5, 6]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case #7: A test case with strings within the rows of the matrix
    >>> matrix = [['1', '2', '3'], ['4', '5', '6']]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

----------------------------------------------------------------

     Len Test:
Test case #7:
    >>> matrix_divided([[1, 2, 3, 4], [1, 2]], 21)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

----------------------------------------------------------------
    Failed Div Test:
Test case #8:
    >>> matrix_divided([[10, 20], [30, 40], [50, 60]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Test case #9:
    >>> matrix_divided([[21, 21], [76, 28]], None)
    Traceback (most recent call last):
    TypeError: div must be a number
